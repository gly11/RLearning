help(sum)
??sum

help(
  ChickWeight)
summary(longley)
head(longley,n = 10)
barplot(longley$GNP) 
barplot(GNP~Year,data = longley)

rq = rpois(100,5)
table(rq)
barplot(table(rq))
barplot(table(rq), main="参数为5的possion分布", 
        col=c("blue", "aquamarine1","aliceblue")) 
colors()

warpbreaks
table(warpbreaks$wool,warpbreaks$tension)
res1 = with(warpbreaks,table(wool,tension))
barplot(res1,beside = T,legend = T)
barplot(res1, beside=TRUE, legend=TRUE,
        main='不同种类',
        ylim=c(0, 20), # y轴的范围
        xlim=c(-1, 6), # x轴的范围，对于柱状图而言，第一个柱子的横坐标是1，并以此类推
        width=1, # 设置柱子的宽度
        col=c("brown2", "aquamarine1"))



x = rnorm(50,100,1)
print(round(x,2))
hist(x,freq = F)
res1 = density(x)
lines(res1)
hist(x,breaks = function(a){length(a)/6})
?hist


x1 = rnorm(50)
x2 = rnorm(50)
list1 = list(x1,x2)

mat1 = cbind(x1,x2)
boxplot(mat1)

boxplot(breaks~wool,data = warpbreaks,main = "formula",varwidth = T)
?rainbow
rainbow(7,alpha = 0.1)
"#FF0000" "#FFDB00" "#49FF00" "#00FF92" "#0092FF" "#4900FF" "#FF00DB"
"#FF00001A" "#FFDB001A" "#49FF001A" "#00FF921A" "#0092FF1A" "#4900FF1A" "#FF00DB1A"

boxplot(
  breaks~wool,
  data = warpbreaks[1:45,],
  main = "formula",
  notch = T,
  horizontal = T,
  varwidth = T, # 箱子越宽说明样本量越大
  col = rainbow(2,alpha = 0.1) # 类似于 colour() 函数，但是是从彩虹色中取色
)

qqnorm(x,main = "Q-Q Plot :: N(0,1)")
qqline(x)

with(
  mtcars,plot(mpg~wt,
              col = (am == 0)+1, # am = 0 为自动挡，1 为手动挡
              cex = (hp-min(hp))/(max(hp)-min(hp))+0.7, # hp 为车辆总马力
              pch = 16)
)

mtcars$am

library(MASS)
n = 4000
x1 = mvrnorm(n,c(0,0),diag(c(1,1)))
x2.tep1 = runif(n/10,0,2*pi)
x2.tep2 = runif(n/10,1,1.2)
x2 = cbind(x2.tep2*cos(x2.tep1),x2.tep2*sin(x2.tep1))
x = rbind(x1,x2)
smoothScatter(x)
library(KernSmooth)
res1 = bkde2D(x,0.3)

persp()
with(res1,persp(x1,x2,fhat,theta = 45,phi = 50))


plot(1937:1960,airmiles,type = "b",main = "航空里程的变化趋势")


x = seq(0,2,0.01)
y = exp(x)
plot(x,y,type = "l",main = "使用 plot 函数绘制指数函数图像")
curve(dnorm(x),xlim = c(0,10))



curve(sin(x),xlim = c(0,2*pi),main = "添加点后的图像")
points(c(0,pi/2,pi,pi*3/2,pi*2),sin(c(0,pi/2,pi,pi*3/2,pi*2)),col = 2, pch = 16,cex = 1)


x = seq(0, 2*pi, length=200)
y1 = sin(x)
y2 = cos(x)
# 未添加
plot(x, y1, type='l', lwd=2, col="red",main = "未添加曲线")
# 添加后
plot(x, y1, type='l', lwd=2, col="red",main = "已添加曲线")
lines(x, y2,lwd=2, col="blue")




y1 <- sin(x)
y2 <- cos(x)
plot(x, y1, type='l',lty = 1, lwd=2, col="red")
lines(x, y2,lty = 2, lwd=2, col="blue") # 添加线条
legend(0, -0.5, # 使用横纵坐标控制图例位置，(0,-0.5) 是图例左上角所处的位置
       col=c("red", "blue"), # 指定图例的颜色
       lty=c(1,1), # 指定图例中线条的类型
       lwd=c(2,2), # 指定图例中线条的宽度
       pch = c(1,2), # 指定图例中点的形状，即使图中没有画点
       legend=c("sin", "cos") # 指定图例中的标签
)
legend("top", # 使用字符串控制图例位置，可选项包括 "left" "top" "right" "bottom"
       col=c("red", "blue"), # 指定图例的颜色
       lty=c(1,1), # 指定图例中线条的类型
       lwd=c(2,2), # 指定图例中线条的宽度
       legend=c("正弦函数", "余弦函数") # 指定图例中的标签
       ,title = "函数类型") # 指定图例的标题


x <- c('一月'=15, '二月'=20, 
       '三月'=18, '四月'=22)
# 默认情况
plot(seq(along=x), x, type='b', lwd=3, main='默认情况', xlab='', ylab='销售额')
# 取消默认的坐标轴后
plot(seq(along=x), x, 
     axes=FALSE, # 取消默认的坐标轴
     type='b', # 同时绘制点和线
     lwd=3,
     main='取消默认的坐标轴后',
     xlab='', ylab='销售额')
axis(1, at=seq(along=x), labels=names(x)) # 横轴
axis(2)

with(mtcars, plot(wt, mpg))
lm1 <- lm(mpg ~ wt, data=mtcars)
abline(lm1, col='red', lwd=2)
a <- coef(lm1)[1]
b <- coef(lm1)[2]
text(4, 30, # 同样是坐标确定位置
     adj=0.5, '线性回归:')
?text
text(4, 27, adj=0,
     substitute(hat(y) == a + b*x,
                list(a=round(coef(lm1)[1], 2), 
                     b=round(coef(lm1)[2], 2))))
par(mfrow = c(2,2))
x = rnorm(100)
y = x**2+rnorm(100)
hist(x)
qqnorm(x)
plot(x,y,main = "y~x")
plot(y,x,main = "x~y")
par(mfrow = c(1,1))
